name: ci

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to JFrog Artifactory
        run: echo "${{ secrets.JF_TOKEN }}" | docker login ${{ secrets.JF_URL }} -u ${{ secrets.JF_USERNAME }} --password-stdin

      - name: Build and push to JFrog Artifactory
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: elinaf.jfrog.io/test-local-basselm/oceaneeringg/actions-runnerr-linux:0.1.2-beta.14

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}

      - name: Publish Build Info with JFrog CLI
        run: |
          # Configure JFrog CLI with username and token
          jf c add --url=${{ secrets.JF_URL }} --user=${{ secrets.JF_USERNAME }} --password=${{ secrets.JF_TOKEN }} --interactive=false
          
          # Collect environment variables for the build
          jf rt build-collect-env github-actions-build 1

          # Collect VCS details from git and add them to the build
          jf rt build-add-git github-actions-build 1

          # Publish build info
          jf rt build-publish github-actions-build 1

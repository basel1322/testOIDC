name: ci

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}  # Set DOCKER_REPO as a job-level environment variable

    permissions:
      contents: read
      id-token: write  # <-- Add this to grant the permission to request the OIDC token

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up JFrog CLI with OIDC
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://elinaf.jfrog.io
        with:
          oidc-provider-name: test1322
          oidc-audience: Jfrog-github
          PLATFORM-REPO: docker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to JFrog Artifactory using OIDC
        run: |
          # Retrieve ID token
      
          ACCESS_TOKEN= 'eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiItbk5RVFcwUUJQMDN6bkc0YWNKeHMza19MdTMwZHBrNktKUnBiN0RMVnhRIn0.eyJzdWIiOiJqZmFjQDAxZjgyZHpqd3liYjJnMDlzdzZicW4wempoL3VzZXJzL2Jhc3NlbG0iLCJzY3AiOiJhcHBsaWVkLXBlcm1pc3Npb25zL2FkbWluIiwiYXVkIjoiKkAqIiwiaXNzIjoiamZmZUAwMWY4MmR6and5YmIyZzA5c3c2YnFuMHpqaCIsImlhdCI6MTcyODYyOTI4MCwianRpIjoiZTY5NTU5ODAtNDNlYS00OWE4LTg0OTEtNjI3ZDYxNzNkMTMyIiwidGlkIjoiYTB6eTJlYWpkZXR4NSJ9.A2jquym4hQTqy5YpzqhTjY2FqsCGHaYn-5Pj86sdIDQlX0glWrikY-M3xda2Zs1xliHYNgvLULF-X8Nu1hmAEwxwDyny2qnQ0G47nlxpcfPphOS7xTsZnXh-59gs_dGxlAO5SqgNZpmk8g2VWaOlW6No--qYoJi8f5C2DwZzwzQaFuTJy4dMpkRC8o5UhWLFHNrtisrQ_3KjYv91sW5wQhQhfUE3ScsovQFmWiur4ClvdT63_nD3iIOPGO3Zovc8gIfS9ApFB5RTows81s248dxJJ56hmrJ8kX7SdxVyfaD9g_qcMmfDkCgfvkEw-mzyIETTj6eX60a_8jkxwsuFfQ'
          
          # Use the access token for docker login
          echo "${ACCESS_TOKEN}" | docker login ${{ secrets.JF_URL }} -u ${{ secrets.JF_USERNAME }} --password-stdin

      - name: Build and Push Docker Image to JFrog Artifactory
        uses: docker/build-push-action@v6
        with:
          context: .  # Use `.` if Dockerfile is at the root of the repository
          push: true
          tags: elinaf.jfrog.io/test-local-basselm/oceaneeringg/actions-runnerrr-linux:0.1.2-beta.14

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_URL }}

      - name: Publish Build Info with JFrog CLI
        run: |
          # Configure JFrog CLI with username and token
          jf c add my-server --url=${{ secrets.JF_URL }} --user=${{ secrets.JF_USERNAME }} --password=${{ secrets.JF_TOKEN }} --interactive=false
          
          # Collect environment variables for the build
          jf rt build-collect-env github-actions-build 1 

          # Collect VCS details from git and add them to the build
          jf rt build-add-git github-actions-build 1 --server-id=my-server

          # Publish build info to JFrog Artifactory
          jf rt build-publish github-actions-build 1 --server-id=my-server
